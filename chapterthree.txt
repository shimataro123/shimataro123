                                                                    CHAPTER 3 OF PYTHON- LISTS AND TUPLES




List- it is a built in data type which stores values of different types as well like string, float, integer, etc..

instead of writing 
marks1= 95.5
marks2=90
marks3=89.4
marks4=95.1

WE can write 
marks = [95.5 , 90 , 89.4 , 95.1 ] 

and now if we print(marks) we get 
all these values 

so instead of writing them separately we can write them under one

and just like index we can find the respective numbers of alignment 

like print(marks[0]) and this will give us 95.5 
and print(marks[3]) and this will give us 95.1 , etc


student = [ "krish" , 95, 39.1 ]

print(student)

print(student[2])

lists are mutable i.e we can replace them 

example- 

student = [ "krish" , 95, 39.1 ]
print(student[0])
student[0]= "tanwar"
print(student[0])

and now instead of krish it will show as tanwar


LIST SLICING- 

marks = [95.5 , 90 , 89.4 , 95.1 ]

print(marks[0:2])

print(marks[0: ])

print(marks[ : 3])

will give us these answers respectively 

[95.5, 90]
[95.5, 90, 89.4, 95.1]
[95.5, 90, 89.4]


All the rules are same as with strings


List methods- these are the same as functions in string- this can be do all float, string as well as int

1) list.append(value)- this added a value to the list in the end

Example- 

list = [2,3,0]

list.append(1)

print(list)

2) list.sort()- this sorts the value in ascending order

list = [2,3,0]
list.sort()

print(list)

3) list.sort(reverse=True)- will sort the values in descending order

Example- 

list = [1,2,5,4,7,9,]
list.sort(reverse=True)

print(list)

4) list.reverse()- will re arrange the values in the reverse order 

Example- 

list = [1,2,5,4,7,9,]
list.reverse()

print(list)

5) list.insert(indx,el)- this will insert an element at a respective index i.e it will take that position now

Example- 

list = [1,2,5,4,7,9,]
list.insert(5,8)

print(list)

wil give us [ 1,2,5,4,7,8,9]

6) list.remove(value)- this will remove that element from the list. If there is more than 1 element of that, it will remove the first one

Example- 

list = [1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,6]

list.remove(5)

print(list)



7) list.pop(idx)- this will remove the element from that index

Exmaple- 

list = [1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,6

list.pop(7)

print(list)


8) list.copy- copies all the elements and pastes them



TUPLES- A  built in data type that helps you create an immutable sequence of values

tup = (1,2,3,4,5,6,7,8,9) - this a tuple same as list but with parenthesis
print(tup[3])
print(tup[2])

since it is immutable, you cant change values

empty tuple= tup = ()
print(tup)

in tuple putting commas is NECESSARY!

SLICING CAN BE DONE IN TUPLES AS WELL

tup = (1,2,3,4,5,65,67,78,)
print(tup[1:3])

will give us 2,3,4,5,65,67,78

TUPLE METHODS-

1) tup,index(el)- used to find out the element in the index

Example- 

tup = (1,2,3,4,5,6,7,9,3,5,6,3,5,6,3)

print(tup[4]) will give us the answer as 5

2) tup.count(el)= - this counts the total occurrences of that character in the tupil

Example- 

tup = (1,2,3,4,5,6,7,9,3,5,6,3,5,6,3)

print(tup.count(5))

and this will give us the answer as 3





                            QUESTIONS



Q) Write a program to ask the user to write their 3 fvt movies and store them in a list

Ans) movie= []
movies= input("Enter movie :")
movie.append(movies)
movies = input ("Enter movie:")
movie.append(movies)
movies= input("Enter movie:")
movie.append(movies)

print(movie)


Q) Write a program to check if a given word is a palindrome or not

Ans) list_1 = ["racecar"]

copyoflist1= list_1.copy()
copyoflist1.reverse()

if(copyoflist1==list_1):
    print("PALINDROME")
else:
    print("NOT A PALINDROME")























